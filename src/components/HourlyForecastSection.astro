---
import { HourlyForecastSectionUIModel } from '../uimodels/TopPageUIModel';
import ThermometerIcon from '../assets/icons/thermometer-natural.svg';

interface Props {
  model: HourlyForecastSectionUIModel;
}

const { model } = Astro.props;
---

  <div>
    <h2 class="text-3xl px-0 sm:text-left text-white mb-4 text-center">Hourly Forecast</h2>
    <div id="hourly-forecast" class="space-y-8 text-white text-center text-sm"></div>

    <div id="forecast-data"
         data-json={encodeURIComponent(JSON.stringify(model.hourlyByDate))}>
    </div>
  </div>

  <script type="module">
    import { onDateChange, getSelectedDate } from '/scripts/forecastState.js';
  
    const raw = document.getElementById('forecast-data')?.dataset?.json;
    const forecastData = JSON.parse(decodeURIComponent(raw));
    const container = document.querySelector('#hourly-forecast');
  
    function renderHourly(date) {
      const forecasts = forecastData[date] || [];
      console.log("⏰ Forecasts for", date, forecasts);
  
      container.innerHTML = forecasts.map(forecast => `
        <div class="flex flex-row items-center justify-between gap-4 sm:gap-x-10 px-4 py-3">
          <p class="w-20 text-left text-sm">${forecast.time}</p>
          <p class="w-12 text-center">${Math.round(forecast.temperature)}°C</p>
          <img src="/src/assets/icons/thermometer-natural.svg" alt="Thermometer icon" />
          <img src="${forecast.weatherIconImagePath}" alt="${forecast.weather}" class="w-10 h-10" />
        </div>
      `).join('');
    }
  
    const defaultDate = getSelectedDate() || Object.keys(forecastData)[0];
    if (defaultDate) renderHourly(defaultDate);
  
    onDateChange(renderHourly);
  </script>