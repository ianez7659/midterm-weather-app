---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout>
  <div class="flex items-center justify-center min-h-screen bg-gray-100">
    <div class="p-6 bg-white rounded-lg shadow-lg">
      <h1 class="text-2xl font-bold text-red-800 mb-4">Current Location</h1>
      <div id="locationStatus" class="text-gray-600">
        Loading...
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  import { getCurrentLocation } from '../apis/LocationApi';
  import { getCurrentWeather, getForecast } from '../apis/WeatherApi';
  import { convertToTopPageUIModel } from '../utils/TopPageUIModelConverter';

  const locationStatus = document.getElementById('locationStatus');
  const updateLocationStatus = async () => {
    if (!locationStatus) return;
    
    try {
      console.log('Getting location...');
      locationStatus.textContent = 'Getting location...';
      // Naver Throw Error: Fallback to default location
      const data = await getCurrentLocation();

      try {
        console.log('Getting weather data...');
        locationStatus.textContent = 'Getting weather data...';
        const weatherData = await getCurrentWeather(data.latitude, data.longitude);
        const forecastData = await getForecast(data.latitude, data.longitude);
        const topPageUIModel = convertToTopPageUIModel(weatherData, forecastData, data.city);

        locationStatus.textContent = 'Success see console result';
        console.log('topPageUIModel', topPageUIModel);
      } catch (weatherError) {
        console.error('Weather data fetch error:', weatherError);
        locationStatus.textContent = `Current location: ${data.city} (Weather data unavailable)`;
      }
    } catch (error) {
      console.error('Location fetch error:', error);
      locationStatus.textContent = 'Unable to get location data. Please check your browser permissions and try again.';
    }
  };

  document.addEventListener('DOMContentLoaded', () => {
    updateLocationStatus();
  });
</script>